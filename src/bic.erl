-module(bic).
-compile(export_all).

is_valid(BIC) when is_list(BIC) -> is_valid(list_to_binary(BIC));
is_valid(BIC) when is_binary(BIC) ->
    case re:run(BIC, "\\A[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}\\z") of
	nomatch -> false;
	{match, _} -> true
    end.

-include_lib("eunit/include/eunit.hrl").

validate_test_() -> 
    [?_assertEqual(true,is_valid("AARBDE5W100")),
     ?_assertEqual(true,is_valid("AARBDE5W360")),
     ?_assertEqual(true,is_valid("AARBDE5W500")),
     ?_assertEqual(true,is_valid("AARBDE5W200")),
     ?_assertEqual(true,is_valid("AARBDE5W250")),
     ?_assertEqual(true,is_valid("AARBDE5W860")),
     ?_assertEqual(true,is_valid("AARBDE5W550")),
     ?_assertEqual(true,is_valid("AARBDE5W700")),
     ?_assertEqual(true,is_valid("AARBDE5W600")),
     ?_assertEqual(true,is_valid("AARBDE5WDOM")),
     ?_assertEqual(true,is_valid("AARBDE5W108")),
     ?_assertEqual(true,is_valid("AARBDE5WXXX")),
     ?_assertEqual(true,is_valid("ABCADEFFXXX")),
     ?_assertEqual(true,is_valid("ABNADEFFBER")),
     ?_assertEqual(true,is_valid("ABNADEFFDOR")),
     ?_assertEqual(true,is_valid("ABNADEFFDUS")),
     ?_assertEqual(true,is_valid("ABNADEFFFRA")),
     ?_assertEqual(true,is_valid("ABNADEFFXXX")),
     ?_assertEqual(true,is_valid("APOADEDDXXX")),
     ?_assertEqual(true,is_valid("ANZBDEFFXXX")),
     ?_assertEqual(true,is_valid("AREPDEMMXXX")),
     ?_assertEqual(true,is_valid("BDWBDEMMFND")),
     ?_assertEqual(true,is_valid("BDWBDEMMBOB")),
     ?_assertEqual(true,is_valid("BDWBDEMMZST")),
     ?_assertEqual(true,is_valid("BDWBDEMMXXX")),
     ?_assertEqual(true,is_valid("BWISDESTXXX")),
     ?_assertEqual(true,is_valid("BRASDEFFXXX")),
     ?_assertEqual(true,is_valid("BSCHDEFFXXX")),
     ?_assertEqual(true,is_valid("SABADE5SXXX")),
     ?_assertEqual(true,is_valid("BFSWDE33BER")),
     ?_assertEqual(true,is_valid("BFSWDE33DRE")),
     ?_assertEqual(true,is_valid("BFSWDE33HAN")),
     ?_assertEqual(true,is_valid("BFSWDE33KRL")),
     ?_assertEqual(true,is_valid("BFSWDE33XXX")),
     ?_assertEqual(true,is_valid("BFSWDE33LPZ")),
     ?_assertEqual(true,is_valid("BFSWDE33MAG")),
     ?_assertEqual(true,is_valid("BFSWDE33MNZ")),
     ?_assertEqual(true,is_valid("BFSWDE33MUE")),
     ?_assertEqual(true,is_valid("BFSWDE33STG")),
     ?_assertEqual(true,is_valid("MELIDEHHXXX")),
     ?_assertEqual(true,is_valid("BOFADEFXXXX")),
     ?_assertEqual(true,is_valid("BABEDEFFXXX")),
     ?_assertEqual(true,is_valid("BKCHDEFFXXX")),
     ?_assertEqual(true,is_valid("BKCHDEFFHMB")),
     ?_assertEqual(true,is_valid("COMMDEFFXXX")),
     ?_assertEqual(true,is_valid("BOTKDEDXXXX")),
     ?_assertEqual(true,is_valid("BSIRDEFFXXX")),
     ?_assertEqual(true,is_valid("BSIRDEHHXXX")),
     ?_assertEqual(true,is_valid("SEPBDEFFXXX")),
     ?_assertEqual(true,is_valid("PLUMDE29XXX")),
     ?_assertEqual(true,is_valid("MARBDE6GXXX")),
     ?_assertEqual(true,is_valid("HALLDE2HGOE")),
     ?_assertEqual(true,is_valid("HALLDE2HXXX")),
     ?_assertEqual(true,is_valid("HALLDE2HHIL")),
     ?_assertEqual(true,is_valid("HALLDE2HOSN")),
     ?_assertEqual(true,is_valid("FAITDE66SBG")),
     ?_assertEqual(true,is_valid("FAITDE66XXX")),
     ?_assertEqual(true,is_valid("LAMPDEDDXXX")),
     ?_assertEqual(true,is_valid("LAMPDEDD500")),
     ?_assertEqual(true,is_valid("LOEBDEBBXXX")),
     ?_assertEqual(true,is_valid("FLESDEMM770")),
     ?_assertEqual(true,is_valid("FLESDEMM783")),
     ?_assertEqual(true,is_valid("FLESDEMM763")),
     ?_assertEqual(true,is_valid("FLESDEMM840")),
     ?_assertEqual(true,is_valid("FLESDEMMXXX")),
     ?_assertEqual(true,is_valid("FLESDEMM700")),
     ?_assertEqual(true,is_valid("FLESDEMM793")),
     ?_assertEqual(true,is_valid("NEELDE22XXX")),
     ?_assertEqual(true,is_valid("WOELDEHHXXX")),
     ?_assertEqual(true,is_valid("INVODEFFASS")),
     ?_assertEqual(true,is_valid("INVODEFFXXX")),
     ?_assertEqual(true,is_valid("CMCIDEFFTRE")),
     ?_assertEqual(true,is_valid("CMCIDEFFXXX")),
     ?_assertEqual(true,is_valid("PICTDEFFXXX")),
     ?_assertEqual(true,is_valid("BARCDEFFMCH")),
     ?_assertEqual(true,is_valid("BARCDEFFXXX")),
     ?_assertEqual(true,is_valid("WINBDE52XXX")),
     ?_assertEqual(true,is_valid("BAYADEDLXXX")),
     ?_assertEqual(true,is_valid("BYLADEMMCLS")),
     ?_assertEqual(true,is_valid("BYLADEMMXXX")),
     ?_assertEqual(true,is_valid("BYLADE77XXX")),
     ?_assertEqual(true,is_valid("BAYVDEMMXXX")),
     ?_assertEqual(true,is_valid("BEBEDEBBXXX")),
     ?_assertEqual(true,is_valid("BEVODEBBXXX")),
     ?_assertEqual(true,is_valid("BTGGDE3RXXX")),
     ?_assertEqual(true,is_valid("BHFBDEFF100")),
     ?_assertEqual(true,is_valid("BHFBDEFF300")),
     ?_assertEqual(true,is_valid("BHFBDEFFAAB")),
     ?_assertEqual(true,is_valid("BHFBDEFFFCB")),
     ?_assertEqual(true,is_valid("BHFBDEFFFUG")),
     ?_assertEqual(true,is_valid("BHFBDEFFSUT")),
     ?_assertEqual(true,is_valid("BHFBDEFFSWB")),
     ?_assertEqual(true,is_valid("BHFBDEFFWER")),
     ?_assertEqual(true,is_valid("BHFBDEFFCFF")),
     ?_assertEqual(true,is_valid("BHFBDEFFFFO")),
     ?_assertEqual(true,is_valid("BHFBDEFFXXX")),
     ?_assertEqual(true,is_valid("BHFBDEFF500")),
     ?_assertEqual(true,is_valid("BHFBDEFF200")),
     ?_assertEqual(true,is_valid("BHFBDEFF250")),
     ?_assertEqual(true,is_valid("BHFBDEFF860")),
     ?_assertEqual(true,is_valid("BHFBDEFF550")),
     ?_assertEqual(true,is_valid("BHFBDEFF700")),
     ?_assertEqual(true,is_valid("BHFBDEFF600")),
     ?_assertEqual(true,is_valid("BHFBDEFF510")),
     ?_assertEqual(true,is_valid("BHWKDE2HXXX")),
     ?_assertEqual(true,is_valid("BHWBDE2HXXX")),
     ?_assertEqual(true,is_valid("BIWBDE33XXX")),
     ?_assertEqual(true,is_valid("BNPADEFFXXX")),
     ?_assertEqual(true,is_valid("PARBDEFFALA")),
     ?_assertEqual(true,is_valid("PARBDEFFBRE")),
     ?_assertEqual(true,is_valid("PARBDEFFISI")),
     ?_assertEqual(true,is_valid("PARBDEFFXXX")),
     ?_assertEqual(true,is_valid("PARBDEFHXXX")),
     ?_assertEqual(true,is_valid("BRLADE22XXX")),
     ?_assertEqual(true,is_valid("BRLADE22OLD")),
     ?_assertEqual(true,is_valid("BSHGDEMMXXX")),
     ?_assertEqual(true,is_valid("FMBKDEMMGCS")),
     ?_assertEqual(true,is_valid("FMBKDEMMICM")),
     ?_assertEqual(true,is_valid("FMBKDEMM700")),
     ?_assertEqual(true,is_valid("FMBKDEMMXXX")),
     ?_assertEqual(true,is_valid("BSUIDEFFXXX")),
     ?_assertEqual(true,is_valid("PCBCDEFFXXX")),
     ?_assertEqual(true,is_valid("CITIDE55XXX")),
     ?_assertEqual(true,is_valid("CIPRDEDDXXX")),
     ?_assertEqual(true,is_valid("CITIDEFFMLL")),
     ?_assertEqual(true,is_valid("CITIDEFFSEC")),
     ?_assertEqual(true,is_valid("CITIDEFFXXX")),
     ?_assertEqual(true,is_valid("DAKVDEFFCON")),
     ?_assertEqual(true,is_valid("DAKVDEFFBE1")),
     ?_assertEqual(true,is_valid("DAKVDEFFFR1")),
     ?_assertEqual(true,is_valid("DAKVDEFFNL1")),
     ?_assertEqual(true,is_valid("DAKVDEFFAS2")),
     ?_assertEqual(true,is_valid("DAKVDEFFA21")),
     ?_assertEqual(true,is_valid("DAKVDEFFA22")),
     ?_assertEqual(true,is_valid("DAKVDEFFA23")),
     ?_assertEqual(true,is_valid("DAKVDEFFA24")),
     ?_assertEqual(true,is_valid("DAKVDEFFA25")),
     ?_assertEqual(true,is_valid("DAKVDEFFA17")),
     ?_assertEqual(true,is_valid("DAKVDEFFA07")),
     ?_assertEqual(true,is_valid("DAKVDEFFA04")),
     ?_assertEqual(true,is_valid("DAKVDEFFA08")),
     ?_assertEqual(true,is_valid("DAKVDEFFA05")),
     ?_assertEqual(true,is_valid("DAKVDEFFA02")),
     ?_assertEqual(true,is_valid("DAKVDEFFA16")),
     ?_assertEqual(true,is_valid("DAKVDEFFA12")),
     ?_assertEqual(true,is_valid("DAKVDEFFCUS")),
     ?_assertEqual(true,is_valid("DAKVDEFFDOM")),
     ?_assertEqual(true,is_valid("DAKVDEFF223")),
     ?_assertEqual(true,is_valid("DAKVDEFF224")),
     ?_assertEqual(true,is_valid("DAKVDEFF227")),
     ?_assertEqual(true,is_valid("DAKVDEFFONF")),
     ?_assertEqual(true,is_valid("DAKVDEFFVAU")),
     ?_assertEqual(true,is_valid("DAKVDEFFXXX")),
     ?_assertEqual(true,is_valid("CBUYDE88XXX")),
     ?_assertEqual(true,is_valid("COBADEHD001")),
     ?_assertEqual(true,is_valid("COBADEHD044")),
     ?_assertEqual(true,is_valid("COBADEHD055")),
     ?_assertEqual(true,is_valid("COBADEHDXXX")),
     ?_assertEqual(true,is_valid("COBADEBBXXX")),
     ?_assertEqual(true,is_valid("COBADEDDXXX")),
     ?_assertEqual(true,is_valid("COBADEFFXXX")),
     ?_assertEqual(true,is_valid("COBADEHHXXX")),
     ?_assertEqual(true,is_valid("COBADEDHXXX")),
     ?_assertEqual(true,is_valid("DRESDEFFXXX")),
     ?_assertEqual(true,is_valid("CHDBDEHHXXX")),
     ?_assertEqual(true,is_valid("CONTDE2HXXX")),
     ?_assertEqual(true,is_valid("AHYBDEFFXXX")),
     ?_assertEqual(true,is_valid("FBHLDEFFXXX")),
     ?_assertEqual(true,is_valid("CRESDE55XXX")),
     ?_assertEqual(true,is_valid("CRESDE22XXX")),
     ?_assertEqual(true,is_valid("CSFBDEFFXXX")),
     ?_assertEqual(true,is_valid("WEBODE33XXX")),
     ?_assertEqual(true,is_valid("WEBODE33300")),
     ?_assertEqual(true,is_valid("DABBDEMMXXX")),
     ?_assertEqual(true,is_valid("DCAGDE6SXXX")),
     ?_assertEqual(true,is_valid("DCPTDE6SXXX")),
     ?_assertEqual(true,is_valid("DCUKDE6SXXX")),
     ?_assertEqual(true,is_valid("DABADEHHXXX")),
     ?_assertEqual(true,is_valid("DEGKDE3KXXX")),
     
     ?_assertEqual(false,is_valid("")),
     ?_assertEqual(false,is_valid("DEGKDE3KXXX1")),
     ?_assertEqual(false,is_valid("DEGKDE3KXX")),
     ?_assertEqual(false,is_valid("BA39 1290 0794 0102 8494"))].
